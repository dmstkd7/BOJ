#define _CRT_SECURE_NO_WARNINGS
#include <iostream>
#include <cstdio>
#include <vector>
#include <algorithm>
#include <queue>
using namespace std;


struct FenwickTree{
	vector<int> tree;
	FenwickTree(int n) : tree(n + 1){};
	
	int sum(int pos){
		pos++;
		int ret = 0;
		while (pos > 0){
			ret += tree[pos];
			pos &= (pos-1);
		}
		return ret;
	 }

	void add(int pos,int val){
		pos++;
		while (pos < tree.size()){
			tree[pos] += val;
			pos += (pos & -pos);
		}
			
	}	
};

struct FenwickTree tree(100010);


int countOverlap2(int L, int R){
	
	int result = 0;
	
	int l_temp = tree.sum(L);
	int r_temp = tree.sum(R);
	result = l_temp + r_temp;

	if (l_temp > 0){
		tree.add(L, -l_temp);
		tree.add(L + 1, l_temp);
	}
		
	if (r_temp > 0){
		tree.add(R, -r_temp);
		tree.add(R + 1, r_temp);
	}

	tree.add(L+1, 1);
	tree.add(R, -1);

	return result;

}


int main(void){

	int Test_Case;
	int L, R;
	int result;
	

	//freopen("input.txt", "r", stdin);
	scanf("%d", &Test_Case);
	for (int i = 1; i <= Test_Case; ++i){
		scanf("%d%d", &L, &R);
		result = countOverlap2(L, R);
		printf("%d\n", result);
	}

	return 0;
}
